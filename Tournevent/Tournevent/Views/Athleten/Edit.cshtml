@model Tournevent.Models.AthletDaten
@using Tournevent.Models

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isGeschlechtW = true;
    if(Model != null)
    {
        isGeschlechtW = (Model.Geschlecht == "w");
    }
}
@Styles.Render("~/Content/Site.css")
@Styles.Render("~/Content/Add.css")
<h2>Athlet Bearbeiten</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Athlet Daten</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Vorname, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vorname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vorname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nachname, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nachname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nachname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Geburtsdatum, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Geburtsdatum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Geburtsdatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Startnummer, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Startnummer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Startnummer, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Geschlecht, htmlAttributes: new { @class = "control-label" })
            <div class="dropdownForm">
                @Html.DropDownList("Geschlecht", new List<SelectListItem>
                {
                    new SelectListItem { Text = "Weiblich", Value = "w", Selected=isGeschlechtW},
                    new SelectListItem { Text = "Männlich", Value = "m", Selected=!isGeschlechtW}
                }, new { @class = "athlet" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Strasse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strasse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Strasse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hausnummer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hausnummer, new { htmlAttributes = new { @class = "form-control", @maxlength = "4" } })
                @Html.ValidationMessageFor(model => model.Hausnummer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ort, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PLZ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PLZ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PLZ, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="actionGroup tableActions">

            <input type="submit" value="Speichern" class="submit" />
            @if (User.IsInRole("Vereinsverantwortlicher"))
            {
                @Html.ActionLink("Zurück", "Index", new { @class = "actionLink" })
            }
            else
            {
                if (GlobalData.currentWettkampf == null)
                {
                    @Html.ActionLink("Zurück", "Index", "Startnummer")
                }
                else
                {
                    @Html.ActionLink("Zurück", "Overview", "Athleten", new { id = GlobalData.verein.ID_Verein }, null)
                }

            }
        </div>
    </div>
}

