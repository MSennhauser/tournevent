@model Tournevent.Models.DisziplinenDaten

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/Login.css")
@Styles.Render("~/Content/Site.css")
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="content">
        <div class="custom-card">
            <div class="card-header">
                <h4>Disziplin Bearbeiten</h4>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div>
                        @Html.HiddenFor(model => model.disziplinenId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.disziplinenId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Abkuerzung, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.Abkuerzung, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Abkuerzung, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AnzahlVersuche, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.AnzahlVersuche, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AnzahlVersuche, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZeitTeilnehmer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ZeitTeilnehmer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZeitTeilnehmer, "", new { @class = "text-danger" })
                    </div>
                </div>


                <h4>Wahldisziplinen zuweisen</h4>
                <table class="table">
                    <tr>
                        <th>
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th></th>
                    </tr>
                    @foreach (var item in Model.AvailableWahldisziplinen)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(modelItem => item.ID_Disziplin)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td class="tableActions">
                                @{
                                    bool contains = false;
                                    foreach (var disziplin in item.Wahldisziplin)
                                    {

                                        contains = (item.ID_Disziplin == disziplin.ID_Disziplin);
                                    }
                                    if (!contains)
                                    {
                                        @Html.ActionLink("Hinzufügen", "Add", new { disziplinId = item.ID_Disziplin, wahldisziplinId = Model.disziplinenId })
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Entfernen", "Remove", new { disziplinId = item.ID_Disziplin, wahldisziplinId = Model.disziplinenId })
                                    }
                                }
                            </td>
                        </tr>
                    }

                </table>

                <div class="actionGroup">
                    <button type="submit" class="submit">Save</button>
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "actionLink" })
                </div>
            </div>

        </div>
    </div>
}

